on: push
name: Build, test, and deploy
jobs:
  check_codestyle:
    name: Codestyle
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      if: '!github.event.deleted'
    - name: Composer install
      if: '!github.event.deleted'
      uses: MilesChou/composer-action@master
      with:
        args: install
    - name: Check codestyle
      if: '!github.event.deleted'
      uses: docker://php:7.3-alpine
      with:
        entrypoint: vendor/bin/phpcs
  static_code_analysis:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      if: '!github.event.deleted'
    - name: Composer install
      if: '!github.event.deleted'
      uses: MilesChou/composer-action@master
      with:
        args: install
    - name: Static code analysis
      if: '!github.event.deleted'
      uses: docker://php:7.3-alpine
      with:
        entrypoint: vendor/bin/phpstan
        args: analyse .
  unit_tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      if: '!github.event.deleted'
    - name: Composer install
      if: '!github.event.deleted'
      uses: MilesChou/composer-action@master
      with:
        args: install
    - name: Unit tests
      if: '!github.event.deleted'
      uses: docker://php:7.3-alpine
      with:
        entrypoint: phpdbg
        args: -qrr ./vendor/bin/phpunit --coverage-clover=coverage/unit.xml
    - name: Unit Codecov
      if: '!github.event.deleted'
      uses: ./.github/actions/codecov
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        args: -F Unit -f coverage/unit.xml
  behaviour_tests:
    name: Behaviour tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      if: '!github.event.deleted'
    - name: Composer install
      if: '!github.event.deleted'
      uses: MilesChou/composer-action@master
      with:
        args: install
    - name: Behaviour tests
      if: '!github.event.deleted'
      uses: docker://php:7.3-alpine
      with:
        entrypoint: phpdbg
        args: -qrr vendor/bin/behat --strict
    - name: Behaviour test coverage
      if: '!github.event.deleted'
      uses: docker://php:7.3-alpine
      with:
        entrypoint: phpdbg
        args: -qrr vendor/bin/phpcov merge --clover=coverage/behat.xml coverage/default.cov
    - name: Behaviour Codecov
      if: '!github.event.deleted'
      uses: ./.github/actions/codecov
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        args: -F Behaviour -f coverage/behat.xml
  specification_lint:
    name: Specification linting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      if: '!github.event.deleted'
    - name: Lint specification
      if: '!github.event.deleted'
      uses: docker://wework/speccy
      with:
        args: lint material-list.yaml
  specification_tests:
    name: Specification tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      if: '!github.event.deleted'
    - name: Composer install
      if: '!github.event.deleted'
      uses: MilesChou/composer-action@master
      with:
        args: install
    - name: Specification tests
      if: '!github.event.deleted'
      uses: ./.github/actions/spec-test
      env:
        ADGANGSPLATFORMEN_DRIVER: testing
        APP_DEBUG: "true"
        APP_ENV: testing
        DB_CONNECTION: sqlite
        DB_DATABASE: /tmp/db.sqlite
      with:
        entrypoint: dredd
        args: --loglevel=error
  deploy:
    name: Deploy
    needs:
    - check_codestyle
    - static_code_analysis
    - unit_tests
    - behaviour_tests
    - specification_lint
    - specification_tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      if: (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop') && !github.event.deleted
    - name: Set Credential Helper for Docker
      if: (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop') && !github.event.deleted
      uses: actions/gcloud/cli@master
      with:
        args: auth configure-docker --quiet
    - name: Build release Docker image
      if: (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop') && !github.event.deleted
      uses: actions/docker/cli@master
      with:
        args: build -t "eu.gcr.io/reload-material-list-3/material-list-release:${{ github.sha }}"
          -f infrastructure/docker/release/Dockerfile .
    - name: Setup Google Cloud
      if: (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop') && !github.event.deleted
      uses: actions/gcloud/auth@master
      env:
        GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
    - name: Push image to GCR
      if: (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop') && !github.event.deleted
      uses: actions/gcloud/cli@master
      with:
        entrypoint: sh
        args: -c "docker push eu.gcr.io/reload-material-list-3/material-list-release:${{ github.sha }}"
    - name: Deploy to Test
      if: github.ref == 'refs/heads/develop' && !github.event.deleted
      uses: ./.github/actions/deployer
      env:
        GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        APP_KEY: ${{ secrets.TEST_APP_KEY }}
        DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
        RELEASE_TAG: ${{ github.sha }}
      with:
        args: test
    - name: Deploy to Prod
      if: github.ref == 'refs/heads/master' && !github.event.deleted
      uses: ./.github/actions/deployer
      env:
        GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
        APP_KEY: ${{ secrets.PROD_APP_KEY }}
        DB_PASSWORD: ${{ secrets.PROD_DB_PASSWORD }}
        RELEASE_TAG: ${{ github.sha }}
      with:
        args: prod
