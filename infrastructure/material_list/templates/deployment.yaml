apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-app
spec:
  replicas: {{ .Values.app.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-app
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-app
        networking/allow-internet-access: "true"
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/scheme: 'http'
        # Ensure rolling updates on config changes.
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      containers:
      - name: material-list
        image: danskernesdigitalebibliotek/material-list:{{ .Values.app.image.version }}
        resources:
          limits:
            memory: 800Mi
          requests:
            cpu: 300m
            memory: 640Mi
        readinessProbe:
          exec:
            command:
              - /usr/local/bin/php-fpm-healthcheck
          initialDelaySeconds: 1
          periodSeconds: 15
          timeoutSeconds: 1
        livenessProbe:
          exec:
            command:
              - /usr/local/bin/php-fpm-healthcheck
              - --accepted-conn=100000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
        env:
          - name: APP_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secret
                key: APP_KEY
          - name: APP_ADGANGSPLATFORMEN_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secret
                key: APP_ADGANGSPLATFORMEN_CLIENT_ID
          - name: APP_ADGANGSPLATFORMEN_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secret
                key: APP_ADGANGSPLATFORMEN_CLIENT_SECRET
          - name: APP_DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secret
                key: APP_DB_USERNAME
          - name: APP_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secret
                key: APP_DB_PASSWORD
        envFrom:
          - configMapRef:
              name: {{ .Release.Name }}-configmap
        ports:
          - containerPort: 9000
          - containerPort: 9253
      - name: nginx
        image: danskernesdigitalebibliotek/material-list-nginx:{{ .Values.app.image.version }}
        resources:
          limits:
            cpu: 200m
            memory: 400Mi
          requests:
            cpu: 50m
            memory: 100Mi
        # robots.txt is explicitly allowed in the image's nginx conf and always
        # present in the application source, so a good test of whether we can
        # send a 200 OK response back without relying on fpm.
        readinessProbe:
          httpGet:
            path: /robots.txt
            port: 80
          initialDelaySeconds: 1
          periodSeconds: 15
          timeoutSeconds: 1
        livenessProbe:
          httpGet:
            path: /robots.txt
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
        envFrom:
          - configMapRef:
              name: {{ .Release.Name }}-nginx-config
        ports:
          - containerPort: 80
            name: pod-http-port
      - name: nginx-exporter
        image: nginx/nginx-prometheus-exporter:{{ .Values.nginx.exporter.image.version }}
        imagePullPolicy: {{ .Values.app.image.imagePullPolicy }}
        resources:
          requests:
            memory: '64Mi'
            cpu: '100m'
          limits:
            memory: '96Mi'
            cpu: '100m'
        readinessProbe:
          tcpSocket:
            port: 9113
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 9113
          initialDelaySeconds: 5
          periodSeconds: 10
        ports:
          - containerPort: 9113
